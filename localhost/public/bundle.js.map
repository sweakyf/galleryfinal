{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAY;AACxB,iBAAiB,+DAAqB;AACtC;AACA,qCAAqC,sDAAY,sBAAsB;AACvE,kBAAkB,+DAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sDAAY;AAC7C;AACA;AACA;AACA;AACA,gBAAgB,sDAAY;AAC5B,6BAA6B,sDAAY,qBAAqB;AAC9D,yBAAyB,+DAAqB;AAC9C,mBAAmB,sDAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqB;;;;;;;;;;;;;;;AC/DrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AAC4B;;;;;;;;;;;;;;;;ACpB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6C;;;;;;;UCV7C;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNsC;AACgB;AACtD;AACA,iBAAiB,qDAAW;AAC5B;AACA,qEAAkB;AAClB,yB","sources":["webpack:///./src/data.js","webpack:///./src/pictures-list.js","webpack:///./src/util.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/main.js"],"sourcesContent":["import {getRandomInt, getRandomArrayElement} from \"./util.js\";\r\n\r\nconst MAX_COMMENT_COUNT = 10;\r\nconst MAX_AVATAR_COUNT = 6;\r\nconst MAX_PHOTO_COUNT = 25;\r\nconst MIN_LIKE_COUNT = 15;\r\nconst MAX_LIKE_COUNT = 200;\r\n\r\nconst descriptions = [\r\n    'красивая картинка',\r\n    'крутая картинка',\r\n    'классная картинка',\r\n    'прикольная картинка',\r\n];\r\n\r\nconst messages = [\r\n    'круто',\r\n    'красиво',\r\n    'классно',\r\n    'прикольно',\r\n    'фу'\r\n];\r\n\r\nconst usernames = [\r\n    'Павел',\r\n    'Артём',\r\n    'Никита',\r\n    'Антон',\r\n];\r\n\r\nfunction getComment(count) {\r\n    return {\r\n        id: getRandomInt(1, MAX_COMMENT_COUNT * count),\r\n        message: getRandomArrayElement(messages),\r\n        user: {\r\n            avatar: `./img/avatars/${getRandomInt(1, MAX_AVATAR_COUNT)}.svg`,\r\n            name: getRandomArrayElement(usernames),\r\n        }\r\n    };\r\n}\r\n\r\nfunction getPictures(count) {\r\n    const arrayPictures = [];\r\n    while (arrayPictures.length < count) {\r\n        const comments = [];\r\n\r\n        while (comments.length < getRandomInt(1, MAX_COMMENT_COUNT)) {\r\n            comments.push(getComment(count));\r\n        }\r\n    \r\n        const picture = {\r\n            id: getRandomInt(1, count),\r\n            url: `./photos/${getRandomInt(1, MAX_PHOTO_COUNT)}.jpg`,\r\n            description: getRandomArrayElement(descriptions),\r\n            likes: getRandomInt(MIN_LIKE_COUNT, MAX_LIKE_COUNT),\r\n            comments: comments\r\n        }\r\n        arrayPictures.push(picture);\r\n    }\r\n\r\n    return arrayPictures;\r\n}\r\n\r\nexport {getPictures};\r\n","const picturesListElement = document.querySelector('.pictures');\r\nconst pictureTemplateElement= document.getElementById('picture')\r\n    .content\r\n    .querySelector(\".picture\");\r\n\r\nconst renderPicturesList = (pictures) => {\r\n    pictures.forEach((picture) => {\r\n        const pictureElement = pictureTemplateElement.cloneNode(true);\r\n\r\n        pictureElement.querySelector('img').src = picture.url;\r\n        // pictureElement.querySelector('img').setAttribute('src', picture.url);\r\n\r\n        pictureElement.querySelector('img').alt = picture.description;\r\n        pictureElement.querySelector('.picture__likes').textContent = picture.likes;\r\n        pictureElement.querySelector('.picture__comments').textContent = picture.comments.length;\r\n\r\n        picturesListElement.append(pictureElement);\r\n    });\r\n}\r\n\r\nexport {renderPicturesList};\r\n","function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction getRandomArrayElement(array) {\r\n    return array[getRandomInt(0, array.length - 1)];\r\n}\r\n\r\nexport {getRandomInt, getRandomArrayElement};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {getPictures} from \"./data.js\";\r\nimport {renderPicturesList} from \"./pictures-list.js\";\r\n\r\nconst pictures = getPictures(3);\r\n\r\nrenderPicturesList(pictures);\r\n// console.log(pictures);"],"names":[],"sourceRoot":""}